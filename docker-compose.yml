# üê≥ Development Docker Compose for House Inventory App
version: '3.8'

services:
  # üóÑÔ∏è PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: house_inventory_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: house_inventory_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./back-end/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d house_inventory_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - house_inventory_network

  # üî¥ Redis for caching and Celery
  redis:
    image: redis:7-alpine
    container_name: house_inventory_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - house_inventory_network

  # üêç Django Backend
  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile.dev
    container_name: house_inventory_backend
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=house_inventory_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./back-end:/app
      - backend_media:/app/media
      - backend_static:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - house_inventory_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # ‚öõÔ∏è React Frontend
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile.dev
    container_name: house_inventory_frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_APP_ENV=development
    volumes:
      - ./front-end:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - house_inventory_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_media:
    driver: local
  backend_static:
    driver: local

networks:
  house_inventory_network:
    driver: bridge
    name: house_inventory_network